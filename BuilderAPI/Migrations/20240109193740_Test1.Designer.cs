// <auto-generated />
using BuilderAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BuilderAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240109193740_Test1")]
    partial class Test1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BuilderAPI.Componente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Componentes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Tarjeta de video"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Gabinete"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Monitor"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Teclado"
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Mouse"
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Parlantes"
                        });
                });

            modelBuilder.Entity("BuilderAPI.Computadora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Almacenamiento")
                        .HasColumnType("int");

                    b.Property<int>("MemoriaRam")
                        .HasColumnType("int");

                    b.Property<int>("NucleosProcesador")
                        .HasColumnType("int");

                    b.Property<int>("PuertosUsb")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Computadoras", (string)null);
                });

            modelBuilder.Entity("BuilderAPI.ComputadoraComponente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdComponente")
                        .HasColumnType("int");

                    b.Property<int>("IdComputadora")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdComponente");

                    b.HasIndex("IdComputadora");

                    b.ToTable("ComputadoraComponentes");
                });

            modelBuilder.Entity("BuilderAPI.ComputadoraComponente", b =>
                {
                    b.HasOne("BuilderAPI.Componente", "Componente")
                        .WithMany()
                        .HasForeignKey("IdComponente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuilderAPI.Computadora", "Computadora")
                        .WithMany()
                        .HasForeignKey("IdComputadora")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Componente");

                    b.Navigation("Computadora");
                });
#pragma warning restore 612, 618
        }
    }
}
